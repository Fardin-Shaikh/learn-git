code . ~~ to open vs code in the current working directory 
git init ~~ to to add current working directory in git 
git add <file name>  ~~ to add the file in stagin area(Maidan)
git commit ~~ to commit the changes (a vim editer will open and press "i " to writ some thing add to exit press ":wq" adn all this willl do fro 1st time only  )
git status  ~~ ti check he save status  of the file
git add -A ~~ use to add all file in the staging area 
git commit -m "<add your commit msg >"  ~~ commit smartly 
git checkout <filename> ~~ to match with the previous commit  
git checkout -f  ~~ to match with the previous commit  for all fila at a time
git log ~~ to see the git commit details 
git log -p -<no of last commit that u want ot see> ~~ eq -- git log -p -2
git diff ~~ compare the workinf tree to staging area
git diff --staging~~ compare the  staging area to last commit 
git commit -a -m "<add comment >" ~~ to add the directly from working tree to commit <working_tree  stagingarea commit >
git rm <filename> ~~ to remove the file from staging area and also from commit
git rm --cached <filename> ~~ to remove the file from staging area only
git status -s ~~ git a short statsu of the file in MM formate (1st m stands form the file has added in commit 2nd M stands for the working directory edit file )
touch .gitignore  ~~ create a igone file ,this file use to write the name of  the ignore file name (
    write this in the file 
    fardin.log  ~~ means ignore the file in the whole project and dont add this file in stagingarea
    /fardin.log  ~~ means ignore the file in the current working directory 
    *.log  ~~ means ignore this file extention in whole project 
    <folder name >/ ~~ to igoner the whole folder   
)
git branch ~~ to check how many branch 
git branch <new branch name >
git checkout <want to switch branch name > ~~ use to switch between branch 
git merge feature1 ~~ to merge the branch in master branch 
git checkout -b <the new branch name> ~~ it create a branch and take u their
git remote add origin https://github.com/Fardin-Shaikh/learn-git.git ~~ it will short the this url by the naem origin 
git remote ~~  to list the remote(short name of url )
git remote -v ~~ to list the remote url 
git push origin main ~~ using this u can push your code in git hub 
git -u push origin main ~~ using this u can push your code in git hub (
    uu can push differen branchs by replacing "main "
    by writing git push -u origin master ,
    next time it will push in the main branch in origin -- by simply writing git push  
)
git clone <clone url >  <name of the folder u want >
